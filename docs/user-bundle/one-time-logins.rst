One time logins
===============

There's often a need to give users a one-time use 'magic' URL to login
to an application without a password.

URLs like this could be added to invitation emails for new users so they can get started straight away.

Requiring a password reset after use
------------------------------------

Make sure the ``passwordExpiresAt`` property of the user is in the past.
See :doc:`password-resets`.

Differences between one-time logins and password reset tokens
-------------------------------------------------------------

You may wonder why there are two URL-based mechanisms to gain access to an account without the password; reset tokens and one-time logins.
However, they both have distinct uses that necessitates they both exist:

* **Storage** - Reset tokens are saved in the database, one-time logins are not.
* **Expiry** - Reset tokens have an individual expiry date, one-time logins expire whenever a user logs in.
* **Login** - Reset tokens don't log the user in, one-time logins do.
* **Purpose** - Reset tokens are designed to be generated by the user and emailed to them, one-time logins are often used by administrators to access other accounts or to send invitations to new users.

.. note::

   Both reset tokens and one-time logins use the ``UriSigner`` service to sign the generated URLs.
   If the ``framework.secret`` configuration value changes, all URLs will be invalidated.

   Read more about the implications of changing the secret `here <http://symfony.com/doc/current/reference/configuration/framework.html#secret>`_.
